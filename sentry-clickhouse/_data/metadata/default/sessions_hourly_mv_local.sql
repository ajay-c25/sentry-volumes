ATTACH MATERIALIZED VIEW sessions_hourly_mv_local TO default.sessions_hourly_local
(
    `org_id` UInt64, 
    `project_id` UInt64, 
    `started` DateTime, 
    `release` LowCardinality(String), 
    `environment` LowCardinality(String), 
    `user_agent` LowCardinality(String), 
    `os` LowCardinality(String), 
    `duration_quantiles` AggregateFunction(quantilesIf(0.5, 0.9), UInt32, UInt8), 
    `duration_avg` AggregateFunction(avgIf, UInt32, UInt8), 
    `sessions` AggregateFunction(countIf, UUID, UInt8), 
    `sessions_preaggr` AggregateFunction(sumIf, UInt32, UInt8), 
    `sessions_crashed` AggregateFunction(countIf, UUID, UInt8), 
    `sessions_crashed_preaggr` AggregateFunction(sumIf, UInt32, UInt8), 
    `sessions_abnormal` AggregateFunction(countIf, UUID, UInt8), 
    `sessions_abnormal_preaggr` AggregateFunction(sumIf, UInt32, UInt8), 
    `sessions_errored` AggregateFunction(uniqIf, UUID, UInt8), 
    `sessions_errored_preaggr` AggregateFunction(sumIf, UInt32, UInt8), 
    `users` AggregateFunction(uniqIf, UUID, UInt8), 
    `users_crashed` AggregateFunction(uniqIf, UUID, UInt8), 
    `users_abnormal` AggregateFunction(uniqIf, UUID, UInt8), 
    `users_errored` AggregateFunction(uniqIf, UUID, UInt8)
) AS
SELECT 
    org_id, 
    project_id, 
    toStartOfHour(started) AS started, 
    release, 
    environment, 
    user_agent, 
    os, 
    quantilesIfState(0.5, 0.9)(duration, (duration != 4294967295) AND (status = 1)) AS duration_quantiles, 
    avgIfState(duration, (duration != 4294967295) AND (status = 1)) AS duration_avg, 
    sumIfState(quantity, seq = 0) AS sessions_preaggr, 
    sumIfState(quantity, status = 2) AS sessions_crashed_preaggr, 
    sumIfState(quantity, status = 3) AS sessions_abnormal_preaggr, 
    uniqIfState(session_id, (errors > 0) AND (session_id != '00000000-0000-0000-0000-000000000000')) AS sessions_errored, 
    sumIfState(quantity, (status IN (2, 3, 4)) AND (session_id = '00000000-0000-0000-0000-000000000000')) AS sessions_errored_preaggr, 
    uniqIfState(distinct_id, distinct_id != '00000000-0000-0000-0000-000000000000') AS users, 
    uniqIfState(distinct_id, (status = 2) AND (distinct_id != '00000000-0000-0000-0000-000000000000')) AS users_crashed, 
    uniqIfState(distinct_id, (status = 3) AND (distinct_id != '00000000-0000-0000-0000-000000000000')) AS users_abnormal, 
    uniqIfState(distinct_id, (errors > 0) AND (distinct_id != '00000000-0000-0000-0000-000000000000')) AS users_errored
FROM default.sessions_raw_local
GROUP BY 
    org_id, 
    project_id, 
    started, 
    release, 
    environment, 
    user_agent, 
    os
